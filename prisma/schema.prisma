generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String    @id @default(cuid())
  email        String        @unique
  name         String?
  password     String?
  username     String?       @unique
  comments     Comment[]
  commentLikes CommentLike[]
  posts        Post[]
  postLikes    PostLike[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Product {
  id        String    @id @default(cuid())
  engName   String   @unique
  korName   String   @unique
  symbol    String   @unique
  board     Board?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Board {
  id        String    @id @default(cuid())
  posts     Post[]
  product   Product  @relation(fields:[productId], references: [id])
  productId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Post {
  id        String    @id @default(cuid())
  content    String
  title      String
  Board      Board     @relation(fields: [boardId], references: [id])
  boardId    String
  User       User      @relation(fields: [userId], references: [id])
  userId     String
  viewsCount Int  @default(0)
  comments   Comment[]
  postLikes  PostLike[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model PostLike {
  id        String    @id @default(cuid())
  Post      Post    @relation(fields: [postId], references: [id])
  postId    String
  User       User      @relation(fields: [userId], references: [id])
  userId     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Comment {
  id        String    @id @default(cuid())
  text        String
  Post      Post    @relation(fields: [postId], references: [id])
  postId    String
  User       User      @relation(fields: [userId], references: [id])
  userId     String
  commentlikes CommentLike[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model CommentLike {
  id        String    @id @default(cuid())
  Comment   Comment @relation(fields: [commentId], references: [id])
  commentId String
  User      User      @relation(fields: [userId], references: [id])
  userId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}